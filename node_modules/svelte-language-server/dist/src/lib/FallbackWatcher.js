"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FallbackWatcher = void 0;
const chokidar_1 = require("chokidar");
const path_1 = require("path");
const vscode_languageserver_1 = require("vscode-languageserver");
const utils_1 = require("../utils");
class FallbackWatcher {
    constructor(glob, workspacePaths) {
        this.callbacks = [];
        this.watcher = chokidar_1.watch(workspacePaths.map((workspacePath) => path_1.join(workspacePath, glob)));
        this.watcher
            .on('add', (path) => this.callback(path, vscode_languageserver_1.FileChangeType.Created))
            .on('unlink', (path) => this.callback(path, vscode_languageserver_1.FileChangeType.Deleted))
            .on('change', (path) => this.callback(path, vscode_languageserver_1.FileChangeType.Changed));
    }
    convert(path, type) {
        const event = {
            type,
            uri: utils_1.pathToUrl(path)
        };
        return {
            changes: [event]
        };
    }
    callback(path, type) {
        const para = this.convert(path, type);
        this.callbacks.forEach((callback) => callback(para));
    }
    onDidChangeWatchedFiles(callback) {
        this.callbacks.push(callback);
    }
    dispose() {
        this.watcher.close();
    }
}
exports.FallbackWatcher = FallbackWatcher;
//# sourceMappingURL=FallbackWatcher.js.map