import ts from 'typescript';
import { Document } from '../../lib/documents';
import { SnapshotManager } from './SnapshotManager';
export interface LanguageServiceContainer {
    readonly tsconfigPath: string;
    readonly compilerOptions: ts.CompilerOptions;
    readonly snapshotManager: SnapshotManager;
    getService(): ts.LanguageService;
    updateDocument(document: Document): ts.LanguageService;
    deleteDocument(filePath: string): void;
}
export interface LanguageServiceDocumentContext {
    transformOnTemplateError: boolean;
    createDocument: (fileName: string, content: string) => Document;
}
export declare function getLanguageServiceForPath(path: string, workspaceUris: string[], docContext: LanguageServiceDocumentContext): ts.LanguageService;
export declare function getLanguageServiceForDocument(document: Document, workspaceUris: string[], docContext: LanguageServiceDocumentContext): ts.LanguageService;
export declare function getService(path: string, workspaceUris: string[], docContext: LanguageServiceDocumentContext): LanguageServiceContainer;
export declare function createLanguageService(tsconfigPath: string, docContext: LanguageServiceDocumentContext): LanguageServiceContainer;
